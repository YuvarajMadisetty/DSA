** 2D arrays

// 2D array consists of rows and columns.
Syntax: int[][] arr=new int[3][];

Eg:  arr[2][3]={1 2 3}
                4 5 6 
        => The first square brakes represents rows and second represents column.

// While declaring an arr we have to give no.of rows and columns.
=>Mentioning no.of columns is optional.
=>Every row is an individual array.

Eg:
// To print a 2D array of 2:3

123
456

Code:

import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter the value: ");
        int[][] arr=new int[2][3];
        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++)
            {
                arr[i][j]=sc.nextInt();
            }
        }
        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++)
            {
                System.out.print(arr[i][j]);
            }
            System.out.println();
        }
        
    }
}

---------------------------------------------------------------------------------------------------------------------------

** Sum of Zig Zag elements in 2D array

Eg:
// Here we are adding a sum variable and removing the print statement and giving the sum  operation to print the zig zag elements.

Code:

import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter the value: ");
        int[][] arr=new int[2][3];
        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++)
            {
                arr[i][j]=sc.nextInt();
            }
        }
        int sum=0;
        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++)
            {
                sum+=arr[i][j];
            }
        }
        System.out.println(sum);
        
    }
}

Or

Eg:
// Here we are adding a sum variable and removing the print statement and giving the sum  operation to print the zig zag elements.
//But here we are giving values directly in code.

Code:

import java.util.*;
class Main {
    public static void main(String[] args) {
        int [][] arr={
            {1,2,3},
            {4,5},
            {3,6,8}
        };
        int sum=0;
        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++)
            {
                sum+=arr[i][j];
            }
        }
        System.out.println(sum);
        
    }
}
----------------------------------------------------------------------------------------------------------------------------------------

** Jagged array

// A jagged array is an array where each element of the array is itself another array, and these inner arrays can have different lengths.
=> Here in jagged array we get dynamic columns for each array.

------------------------------------------------------------------------------------------------------------------------------------------

** Missing Consecutive Onces in array's.

Eg:
// Here we are value of expected sum as exSum by doing n*(n+1)/2 to get expected sum.
=> Now the actual sum of array is subtracted with expected sum of array to get the missing value.

Code:

import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] arr={1,2,3,5};
        int n=arr.length+1;
        int exSum=n*(n+1)/2;
        int actSum=0;
        for(int i=0; i<arr.length; i++)
        {
            actSum=actSum+arr[i];
        }
        System.out.print(exSum-actSum);
    }
}

-------------------------------------------------------------------------------------------------------------------------------------------------

** Maximum Consecutive Ones in array's.

Eg:
// Here we are using count in for looped if condition to count the array , if the value is equal to 1 then re-enters the loop and add the previous value to new value of count.
=> Then we give if max is equal to count then max is count and get's the maximun consecutive ones .

Code:

import java.util.*;
class Main {
    public static void main(String[] args) {
        int[] arr={1,0,1,0,1,1,0,0};
        int count=0;
        int max = 0;
        for(int i=0;i<arr.length-1;i++)
        {
            if(arr[i]==1)
            {
                count++;
                if(count>max)
                {
                    max=count;
                }
            }
        }
        System.out.println(max);
    }
}

----------------------------------------------------------------------------------------------------------------------------------------------------

**  Rotating the array matrix to 90 degree's.

Eg: 
// First write a 2D array code then transverse the code.

Code:

------------------------------------------------------------------------------------------------------------------------------------------------------

** Finding Leader in an array .
Eg:
// Here if the array values has a greater number on it right then it is not a leader if not it is a Leader(Greater number).
=> If an array has arr={11,3,5,9,4,6}
=> Here the '11' is a leader because it don't has greater number on its right and as well as '9' also a leader ,because it is not having any greater on right and '6' also same.

Code:

import java.util.*;
class Main {
    public static void main(String[] args)
    {
        int arr[]={11,3,5,9,4,6};
        int max=Integer.MIN_VALUE;
        for(int i=arr.length-1;i>=0;i--)
        {
            if(arr[i]>max)
            {
                max=arr[i];
                System.out.print(max +" ");
            }
        }
    }
}
