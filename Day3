** Nested Loops
// A loop inside a loop is called as Nested Loop.
//For every problem there will be three types of solutions
* Brute force
* Better
* Optimal

=> Most of the Brute force solutions will be get using two loops, and most of the solutions is solved using two Loops
The time complexity of Brute force is always n^2
** Using Two Loops

Eg:

class Main{
      public static void main{
              for(int i=1;i<=5;i++){
                  for(int j=1;j<=5;j++){
                                        }
                          }
              }
]
_____________________________________________________________________________________________________________________________________________
** Pattern printing
// To get a pattern ***** like this,We need to use 5 rows and 5 columns.
                    *****
                    *****  
Eg:

class Main {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= 5; j++) {
                System.out.print("*");
            }
            System.out.println(); // Move to the next line after each row
        }
    }
}

** To print below structure using " * ".

*****
*   *
*   *
*   *
*****

Eg: 
class Main {
    public static void main(String[] args) {
        int n=5;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
               if (i==1 || i==n || j==1 || j==n){
                   System.out.print("*");
               }
               else{
                   System.out.print(" ");
               }
            }
            System.out.println(); 
        }
    }
}


** For Printing left diagonal in belowe structure with " * "

* * * * * *
*  *      *
*    *    *
*      *  *
* * * * * *

Eg:Here we use condition i==j for above code to make it .

class Main {
    public static void main(String[] args) {
        int n=6;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
               if (i==1 || i==n || j==1 || j==n || i==j){
                   System.out.print("*");
               }
               else{
                   System.out.print(" ");
               }
            }
            System.out.println(); 
        }
    }
}


**To print the below pattren

* * * * * 
* *   * * 
*   *   * 
* *   * * 
* * * * *
//Here we are using a aditional condition  i+j==6 for the above code

Eg: 

class Main {
    public static void main(String[] args) {
        int n=5;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
               if (i==1 || i==n || j==1 || j==n || i==j || i+j==6){
                   System.out.print("* ");
               }
               else{
                   System.out.print("  ");
               }
            }
            System.out.println(); 
        }
    }
}

**To print a Right angle triangle using " * "

* 
* * 
* * * 
* * * * 
* * * * * 

//For the above structure we have iterate the row using column number.

Eg:

class Main {
    public static void main(String[] args) {
        int n=5;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= i; j++) {
              System.out.print("* ");
            }
            System.out.println(); 
        }
    }
}

**To print a holo right angle triangle.

Eg:

class Main {
    public static void main(String[] args) {
        
        int n=5;
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=i;j++)
            {
               if(i==n || j==1 || i==j)
               {
                   System.out.print("* ");
               }
               else
               {
                   System.out.print("  ");
               }
            }
            System.out.println();
        }
        
    }
}

_____________________________________________________________________________________________________________________________________________
** Checking Weather the given is a prime or not.

import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter number: ");
        int n=sc.nextInt();
        for (int i=2;i<=n;i++) {
                if (n%i==0){
                    System.out.print("It is not a Prime number.");
                }
                else
                {
                System.out.println("It is a Prime number.");
                break;
                }
        }
    }
}

_____________________________________________________________________________________________________________________________________________
** Checking Weather the given is a Amstrong number.

import java.util.*;
class Main {
    public static void main(String[] args) {
        int num= 153;
        isArmstrong(num);
    }
    static void isArmstrong(int num)
    {
        int temp = num;
        int sum=0;
        while(temp>0){
            int rem=temp%10;
             sum=sum+rem*rem*rem;
            temp=temp/10;
        }
        if(num==sum)
        {
            System.out.println("It is a Armstrong.");
        }
        else{
            System.out.println("It is not Armstrong.");
        }
    }
}

_____________________________________________________________________________________________________________________________________________
** Example of do while Loop
//The while should be used after the completition of 'do' loop.
//Only the while loop is closed with semi column.

import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner Sc=new Scanner(System.in);
        int correctPin=1234;
        int userPin;
        do{
            System.out.print("Enter Your pin: ");
            userPin=Sc.nextInt();
            if(userPin!=correctPin){
                System.out.println("IncorrectPin, Try again");
            }
    }while(userPin!=correctPin);
            System.out.print("Pin is correct");
    }
}

